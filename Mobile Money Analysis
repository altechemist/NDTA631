Mobile Money Analysis/
├── WB_FINDEX_FIN13BM.csv         # Sent money dataset
├── WB_FINDEX_FIN13CM.csv         # Withdrew money dataset

# NDTA631 - Data Analysis and Visualization
import pandas as pd
import numpy as np
print('Starting NDTA631 Assignment Analysis...')
print('Loading datasets...')
sent_df = pd.read_csv('../WB_FINDEX_FIN13BM.csv')
withdrew_df = pd.read_csv('../WB_FINDEX_FIN13CM.csv')
print(f'Sent Money Dataset: {sent_df.shape}')
print(f'Withdrew Money Dataset: {withdrew_df.shape}')
print('Filtering South Africa data...')
sa_sent = sent_df[sent_df['REF_AREA'] == 'ZAF']
sa_withdrew = withdrew_df[withdrew_df['REF_AREA'] == 'ZAF']
print(f'South Africa Sent Money Records: {len(sa_sent)}')
print(f'South Africa Withdrew Money Records: {len(sa_withdrew)}')

# Clean the data by removing NaN values
sa_sent_clean = sa_sent.dropna(subset=['OBS_VALUE'])
sa_withdrew_clean = sa_withdrew.dropna(subset=['OBS_VALUE'])
print(f'Clean South Africa Sent Money Records: {len(sa_sent_clean)}')
print(f'Clean South Africa Withdrew Money Records: {len(sa_withdrew_clean)}')

print('Generating descriptive statistics...')
sent_stats = sa_sent_clean['OBS_VALUE'].describe()
withdrew_stats = sa_withdrew_clean['OBS_VALUE'].describe()
print('Sent Money Statistics:')
print(sent_stats)
print('Withdrew Money Statistics:')
print(withdrew_stats)
print('Saving results...')
sent_stats.to_csv('../outputs/sent_money_stats.csv')
withdrew_stats.to_csv('../outputs/withdrew_money_stats.csv')
print('Analysis completed successfully!')

# === ADVANCED NUMERICAL ANALYSIS ===
print('\n=== ADVANCED NUMERICAL ANALYSIS ===')
sent_values = sa_sent_clean['OBS_VALUE'].to_numpy()
withdrew_values = sa_withdrew_clean['OBS_VALUE'].to_numpy()

if len(sent_values) > 0 and len(withdrew_values) > 0:
    sent_mean = np.mean(sent_values)
    sent_median = np.median(sent_values)
    sent_std = np.std(sent_values)
    withdrew_mean = np.mean(withdrew_values)
    withdrew_median = np.median(withdrew_values)
    withdrew_std = np.std(withdrew_values)
    
    print(f'NumPy Statistics Summary:')
    print(f'Sent Money - Mean: {sent_mean:.2f}%, Median: {sent_median:.2f}%, Std: {sent_std:.2f}')
    print(f'Withdrew Money - Mean: {withdrew_mean:.2f}%, Median: {withdrew_median:.2f}%, Std: {withdrew_std:.2f}')
else:
    print('No valid data available for analysis')
    sent_mean = withdrew_mean = sent_median = withdrew_median = sent_std = withdrew_std = 0
